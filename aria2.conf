## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##
## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##

#aria2.c采用解除单服务器线程数限制的编译版（默认单服务器16线程，所有服务器128线程）
#注意：aria2对多核处理器的支持还不够完善，若总线程数超过1000可能会使下载速度不稳定，甚至卡0B/s，具体临界值取决于cpu单核心性能


## 文件保存相关 ##

# 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置
dir=D:\Aria2Download
# 配置文件路径
conf-path=aria2.conf
# 日志文件的路径. 如果设置为 "-", 日志则写入到 stdout. 如果设置为空字符串(""), 日志将不会记录到磁盘上.
log=aria2.log
# 日志级别，可选debug, info, notice, warn, error, 默认: debug
log-level=error

# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
#disk-cache=32M
#disk-cache=32M
# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: none < falloc ? trunc < prealloc
# falloc和trunc则需要文件系统和内核支持
# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项
file-allocation=falloc
# 断点续传
continue=true

## 下载连接相关 ##

# 最大同时下载任务数, 运行时可修改, 默认:5
max-concurrent-downloads=16
# 同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=128
# 最小文件分片大小, 添加时可指定, 取值范围1K - 1024M, 默认:1M
# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=256K
# 单个任务最大线程数, 添加时可指定, 默认:5
split=128
# 整体下载速度限制, 运行时可修改, 默认:0
#max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0
#max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0
#max-overall-upload-limit=0
# 单个任务上传速度限制, 默认:0
#max-upload-limit=0
# 禁用IPv6, 默认:false
disable-ipv6=true
# 设置建立 HTTP/FTP/代理服务器 连接的超时时间(秒). 当连接建立后, 此选项不再生效, 请使用 --timeout 选项.
#connect-timeout=60
# 超时时间
#timeout=60
# 文件未找到重试次数，默认:0.重试时同时会记录重试次数，所以也需要设置 --max-tries 这个选项
max-file-not-found=5
# 最大尝试次数，0表示无限，默认:5
max-tries=0
# 设置重试间隔时间(秒). 当此选项的值大于 0 时, aria2 在 HTTP 服务器返回 503 响应时将会重试.
retry-wait=10
# 在服务器返回 HTTP 400 Bad Request 时重试，仅当 retry-wait > 0 时有效
retry-on-400
# 在服务器返回 HTTP 403 Bad Request 时重试，仅当 retry-wait > 0 时有效
retry-on-403
# 在服务器返回 HTTP 406 Bad Request 时重试，仅当 retry-wait > 0 时有效
retry-on-406

## 进度保存相关 ##

# 从会话文件中读取下载任务
input-file=aria2.session
# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session=aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
save-session-interval=60
# 自动保存任务进度，0为退出时才保存，默认：60
#auto-save-interval=1
# 强制保存会话, 即使任务已经完成或删除, 默认:false. 较新的版本开启后会在任务完成后依然保留.aria2文件
#force-save=false

## RPC相关设置 ##

# 启用RPC, 默认:false
enable-rpc=true
# 允许所有来源, 默认:false
rpc-allow-origin-all=true
# 允许非外部访问, 默认:false
rpc-listen-all=true
# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
#event-poll=select
# RPC监听端口, 端口被占用时可以修改, 默认:6800
#rpc-listen-port=6800
# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
#rpc-secure=<taken>
# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-user=<USER>
# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-passwd=<PASSWD>
# 启用 RPC 服务的 SSL/TLS 加密, 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接
rpc-secure=false
# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件(.pem/.crt)
#rpc-certificate=/config/xxx.pem
# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件(.key)
#rpc-private-key=/config/xxx.key

## BT/PT下载相关 ##

# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true
#follow-torrent=true
# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999
listen-port=51413
# 单个种子最大连接数, 默认:55
#bt-max-peers=55
# DHT（IPv4）文件
dht-file-path=dht.dat
# DHT（IPv6）文件
dht-file-path6=dht6.dat
# 打开DHT功能, PT需要禁用, 默认:true
enable-dht=true
# 打开IPv6 DHT功能, PT需要禁用
enable-dht6=false
# DHT网络监听端口, 默认:6881-6999
#dht-listen-port=6881-6999
# 本地节点查找, PT需要禁用, 默认:false
bt-enable-lpd=true
# 种子交换, PT需要禁用, 默认:true
#enable-peer-exchange=ture
# 每个种子限速, 对少种的PT很有用, 默认:50K
#bt-request-peer-speed-limit=50K
# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0
seed-ratio=1.0
# 当达到最小做种时间后，自动停止作种，0表示在BT任务下载完成后不进行做种
seed-time=60
# 全局最大上传速度 (字节/秒). 0 表示不限制. 数值的单位 K 或 M (1K = 1024, 1M = 1024K).
max-overall-upload-limit=2M
# 每个任务的最大上传速度 (字节/秒). 0 表示不限制. 数值的单位 K 或 M (1K = 1024, 1M = 1024K).
max-upload-limit=0
# BT校验相关, 默认:true
#bt-hash-check-seed=true
# 继续之前的BT任务时, 无需再次校验, 默认:false
#bt-seed-unverified=false
# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false
#bt-save-metadata=false
# 加载已保存的元数据文件，默认:false
#bt-load-saved-metadata=false
# 删除未选择文件，默认:false
#bt-remove-unselected-file=false
# 保存上传的种子，默认:true
#rpc-save-upload-metadata=ture
# 当种子文件下载完成后暂停后续的下载. 此选项仅当 --enable-rpc 选项启用时生效.
pause-metadata=true
# 尝试优先下载每个文件开头或结尾的分片. 此选项有助于预览文件. 参数可以包括两个关键词: head 和 tail. 如果包含两个关键词, 需要使用逗号分隔. 每个关键词可以包含一个参数, SIZE. 例如, 如果指定 head=SIZE, 每个文件的最前 SIZE 数据将会获得更高的优先级. tail=SIZE 表示每个文件的最后 SIZE 数据. SIZE 可以包含 K 或 M (1K = 1024, 1M = 1024K).
bt-prioritize-piece=head=10M,tail=10M
# 统计当前活动下载任务(参见 -j 选项) 时排除仅做种的任务. 这意味着, 如果参数设置为 -j3, 此选项打开并且当前有 3 个正在活动的任务, 并且其中有 1 个进入做种模式, 那么其会从正在下载的数量中排除(即数量会变为 2), 在队列中等待的下一个任务将会开始执行. 但要知道, 在 RPC 方法中, 做种的任务仍然被认为是活动的下载任务.
bt-detach-seed-only=false

# 客户端伪装, PT需要使用
#user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36
# PT需要保持 user-agent 和 peer-agent 两个参数一致。即注释上面这行，然后取消注释下面的相关选项。
#----------------------------------
#user-agent=qBittorrent/4.2.1
#peer-agent=qBittorrent/4.2.1
#peer-id-prefix=-qB4210-
#----------------------------------
#user-agent=uTorrentMac/1870(43796)
#peer-agent=uTorrentMac/1870(43796)
#peer-id-prefix=-UM1870-
#----------------------------------
#user-agent=Deluge/2.0.3
#peer-agent=Deluge/2.0.3
#peer-id-prefix=-DE2030-
#----------------------------------
#user-agent=Transmission/2.94
#peer-agent=Transmission/2.94
#peer-id-prefix=-TR2940-
#----------------------------------

# BT 服务器地址.使用逗号分隔.如果服务器地址在 --bt-exclude-tracker 选项中, 其将不会生效.
bt-tracker=udp://tracker.opentrackr.org:1337/announce,udp://open.demonii.com:1337/announce,udp://open.tracker.cl:1337/announce,udp://open.stealth.si:80/announce,udp://tracker.torrent.eu.org:451/announce,udp://explodie.org:6969/announce,udp://tracker-udp.gbitt.info:80/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.qu.ax:6969/announce,udp://tracker.dump.cl:6969/announce,udp://tracker.bittor.pw:1337/announce,udp://opentracker.io:6969/announce,udp://open.free-tracker.ga:6969/announce,udp://ns-1.x-fins.com:6969/announce,udp://isk.richardsw.club:6969/announce,udp://discord.heihachi.pw:6969/announce,http://www.torrentsnipe.info:2701/announce,http://www.genesis-sp.org:2710/announce,http://tracker810.xyz:11450/announce,http://tracker.xiaoduola.xyz:6969/announce
